{"version":3,"sources":["components/AddMovie.module.css","components/Movie.module.css","components/MoviesList.module.css","components/AddMovie.js","components/Movie.js","components/MoviesList.js","App.js","index.js"],"names":["module","exports","AddMovie","props","titleRef","useRef","openingTextRef","releaseDateRef","onSubmit","event","preventDefault","movie","title","current","value","openingText","releaseDate","onAddMovie","refreshList","className","classes","control","htmlFor","type","id","ref","rows","Movie","MovieList","movies","map","key","App","useState","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","useCallback","a","fetch","response","ok","Error","json","data","console","log","loadedMovies","push","reveresedLoaded","reverse","message","method","body","JSON","stringify","header","useEffect","content","length","MoviesList","Fragment","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.135bc9b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"AddMovie_control__2NuxO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__1baCb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies-list\":\"MoviesList_movies-list__2IpI-\"};","import React, { useRef } from \"react\";\n\nimport classes from \"./AddMovie.module.css\";\n\nfunction AddMovie(props) {\n  const titleRef = useRef(\"\");\n  const openingTextRef = useRef(\"\");\n  const releaseDateRef = useRef(\"\");\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    // could add validation here...\n\n    const movie = {\n      title: titleRef.current.value,\n      openingText: openingTextRef.current.value,\n      releaseDate: releaseDateRef.current.value,\n    };\n\n    props.onAddMovie(movie);\n    props.refreshList();\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"title\">Title</label>\n        <input type=\"text\" id=\"title\" ref={titleRef} />\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"opening-text\">Opening Text</label>\n        <textarea rows=\"5\" id=\"opening-text\" ref={openingTextRef}></textarea>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"date\">Release Date</label>\n        <input type=\"text\" id=\"date\" ref={releaseDateRef} />\n      </div>\n      <button type=\"submit\">Add Movie</button>\n    </form>\n  );\n}\n\nexport default AddMovie;\n","import React from 'react';\n\nimport classes from './Movie.module.css';\n\nconst Movie = (props) => {\n  return (\n    <li className={classes.movie}>\n      <h2>{props.title}</h2>\n      <h3>{props.releaseDate}</h3>\n      <p>{props.openingText}</p>\n    </li>\n  );\n};\n\nexport default Movie;\n","import React from \"react\";\n\nimport Movie from \"./Movie\";\nimport classes from \"./MoviesList.module.css\";\n\nconst MovieList = (props) => {\n  return (\n    <ul className={classes[\"movies-list\"]}>\n      {props.movies.map((movie) => (\n        <Movie\n          key={movie.id}\n          title={movie.title}\n          releaseDate={movie.releaseDate}\n          openingText={movie.openingText}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport AddMovie from \"./components/AddMovie\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://reactmovielist-284bf-default-rtdb.firebaseio.com/movies.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"wtf yo, this API busted on a stack, fax no printer\");\n      }\n      const data = await response.json();\n      console.log(data);\n\n      const loadedMovies = [];\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].releaseDate,\n        });\n      }\n      const reveresedLoaded = loadedMovies.reverse();\n\n      setMovies(reveresedLoaded);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  async function addMovieHandler(movie) {\n    const response = await fetch(\n      \"https://reactmovielist-284bf-default-rtdb.firebaseio.com/movies.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(movie),\n        header: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    const data = await response.json();\n    console.log(data);\n  }\n\n  let content = <p>Found no movies.</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n  if (error) {\n    content = <p>{error}</p>;\n  }\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie\n          refreshList={fetchMoviesHandler}\n          onAddMovie={addMovieHandler}\n        />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}